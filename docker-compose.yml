version: "3.8"

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    container_name: ditto-postgres
    environment:
      POSTGRES_USER: ditto_user
      POSTGRES_PASSWORD: ditto_password
      POSTGRES_DB: ditto_dev
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./backend_go/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ditto_user -d ditto_dev"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - ditto-network

  # Go Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: ditto-backend
    ports:
      - "8080:8080"
    environment:
      # Database connection
      DATABASE_URL: postgres://ditto_user:ditto_password@db:5432/ditto_dev?sslmode=disable

      # JWT secrets
      JWT_SECRET: dev-jwt-secret-change-in-production
      JWT_REFRESH_SECRET: dev-refresh-secret-change-in-production

      # Server config
      PORT: 8080
      GIN_MODE: debug

      # External APIs (optional for development)
      CLEAROUT_API_KEY: ${CLEAROUT_API_KEY:-}
    volumes:
      # Mount source code for hot reload
      - ./backend:/app
      - /app/tmp # Exclude tmp directory from hot reload
    depends_on:
      db:
        condition: service_healthy
    networks:
      - ditto-network
    command: ["./docker-entrypoint.sh"]

volumes:
  db_data:
    driver: local

networks:
  ditto-network:
    driver: bridge

